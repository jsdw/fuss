@media some-media-thing {

    $a: { $c: ($a) => $a + 100px; $b: $c(2px); };
    $b: $a;
    $c: $a.b;

    $other: import("other");
    $other2: import("../full/../full/other.fuss");
    $hello: ($a) => $a + 2px;
    $fn: ($a) => .hi { background-color: $a; };
    $block: {
        $a: .hello.there {
            color: red;
            padding: $c;
        };
        $b: .another.there {
            color: blue;
        }
    };

    $padding: 5px;
    $mixin: ($a) =>
        ${ $a }-class {
            color: red;
        };

    $mixin("-moz")
    $mixin("-webkit")

    .more .bits {
        color: red;
        padding: $padding;

        .yet.more {
            color:blue;
            padding: $padding;
            .and.more {
                color: green;
            }
        }

        .hello.there {
            opacity: 0;
            {
                one: 1;
                two: 2;
                three: 3
            }
            {
                four: 4;
                five: 5;
                six: 6
            }
            { seven: 7; eight: 8 }

            &.and-this {
                nine: 9;
                ten: 10
            }
        }
        .hello.there.and-this {
            eleven: 11;
        }

    }
    .another {
        woop: blue;
        @media another-media-lark {
            opacity: 0;
        }
    }
    .hello {
        another: ${ $hello(1px) };
        $fn(2px);
    }

    @font-face {
        some-font-lark: inner;
    }

    $fn(400px);
    $block.a;
    $block.b;

    @keyframes my-animation {
        from { hello: 2px; }
    }
    @keyframes my-animation {
        to { bye: 2px; }
    }

    .sharks {
        $other.another;
        margin: ${ $other.a + $other.b };
    }

    // copied from css-tricks; works like SCSS:
    .parent {
        .child {
            .grand-child & {
                &.sibling { color: blue; }
            }
        }
    }

}

@font-face {
    some-font-lark: outer;
}

@keyframes outer {
    from { lark: 1; }
    to { lark: 2; }
}